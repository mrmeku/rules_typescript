load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "label.go",
        "labeler.go",
        "resolve.go",
        "resolve_external.go",
        "resolve_vendored.go",
        "std_package_list.go",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@com_github_bazelbuild_buildtools//build:go_default_library",
        "@build_bazel_rules_typescript//tools/taze/config:go_default_library",
        "@org_golang_x_tools//go/vcs:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    size = "small",
    srcs = [
        "labeler_test.go",
        "resolve_external_test.go",
        "resolve_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "@build_bazel_rules_typescript//tools/taze/config:go_default_library",
        "@org_golang_x_tools//go/vcs:go_default_library",
    ],
)

# TODO(jayconrod): test that the checked-in static file matches the generated
# file. The generated code is checked in so that Taze can still be built
# with "go get".
genrule(
    name = "std_package_list",
    srcs = ["@go_sdk//:packages.txt"],
    outs = ["std_package_list.go"],
    cmd = "$(location //tools/taze/resolve/internal/gen_std_package_list) $< $@",
    tools = ["//tools/taze/resolve/internal/gen_std_package_list"],
)
